[{"C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\index.js":"1","C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\App.js":"2","C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\Gardening.js":"3","C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\Home.js":"4","C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\Cooking.js":"5","C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\LocalBusiness.js":"6","C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\Scripture.js":"7","C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\Login.js":"8","C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\Contact.js":"9","C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\Navigation.js":"10","C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\Card.js":"11","C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\Recipie.js":"12"},{"size":325,"mtime":1610593575519,"results":"13","hashOfConfig":"14"},{"size":1616,"mtime":1610593505254,"results":"15","hashOfConfig":"14"},{"size":281,"mtime":1610243974568,"results":"16","hashOfConfig":"14"},{"size":729,"mtime":1610504256375,"results":"17","hashOfConfig":"14"},{"size":55184,"mtime":1610591813991,"results":"18","hashOfConfig":"14"},{"size":3893,"mtime":1610591813993,"results":"19","hashOfConfig":"14"},{"size":2920,"mtime":1610731424227,"results":"20","hashOfConfig":"14"},{"size":211,"mtime":1609373435798,"results":"21","hashOfConfig":"14"},{"size":2538,"mtime":1610591813989,"results":"22","hashOfConfig":"14"},{"size":1214,"mtime":1610592769679,"results":"23","hashOfConfig":"14"},{"size":239,"mtime":1610243974556,"results":"24","hashOfConfig":"14"},{"size":10081,"mtime":1610591813994,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1b7i3qf",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"29"},"C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\index.js",["53"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App.js';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n",["54","55"],"C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\App.js",[],"C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\Gardening.js",[],"C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\Home.js",[],"C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\Cooking.js",[],"C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\LocalBusiness.js",[],"C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\Scripture.js",[],"C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\Login.js",[],"C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\Contact.js",[],"C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\Navigation.js",[],"C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\Card.js",[],"C:\\Users\\Owner\\Desktop\\wild-roots-blog-frontend\\wild-roots-blog\\src\\components\\Recipie.js",["56"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport '../assets/Recipie.css';\r\n\r\nclass Recipie extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            firstName: '',\r\n            email: '',\r\n            recipieName: '',\r\n            description: '',\r\n        }\r\n        // this.onNameChange = this.onNameChange.bind(this)\r\n        // this.onEmailChange = this.onEmailChange.bind(this)\r\n        // this.onRecipieChange = this.onRecipieChange.bind(this)\r\n        // this.onDescriptionChange = this.onDescriptionChange.bind(this)\r\n    }\r\n\r\n    onNameChange(event) {\r\n        this.setState({ firstName: event.target.value })\r\n    }\r\n    onEmailChange(event) {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n    onRecipieChange(event) {\r\n        this.setState({ recipieName: event.target.value })\r\n    }\r\n    onDescriptionChange(event) {\r\n        this.setState({ description: event.target.value })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n        axios({\r\n            method: \"POST\",\r\n            url: \"http://localhost:3001/cooking/addRecipe\",\r\n            data: this.state\r\n        }).then((response) => {\r\n            console.log(response)\r\n            if (response.data.status === 'success') {\r\n                alert(\"Message Sent.\");\r\n                this.resetForm()\r\n            } else if (response.data.status === 'fail') {\r\n                alert(\"Message failed to send.\")\r\n            }\r\n        })\r\n    }\r\n    resetForm() {\r\n        this.setState({ firstName: '', email: '', recipieName: '', description: '' })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"recipie\">\r\n                <form id=\"form__contact\" onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            value={this.state.firstName}\r\n                            onChange={this.onNameChange.bind(this)}\r\n                            placeholder=\"FirstName\"\r\n                        />\r\n                    </div><br />\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"email\"\r\n                            value={this.state.email}\r\n                            onChange={this.onEmailChange.bind(this)}\r\n                            placeholder=\"Email\"\r\n                        />\r\n                    </div>\r\n                    <br></br>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            aria-describedby=\"recipie\"\r\n                            value={this.state.recipieName}\r\n                            onChange={this.onRecipieChange.bind(this)}\r\n                            placeholder=\"Recipie Name\"\r\n                        />\r\n                    </div>\r\n                    <br></br>\r\n                    <div className=\"form-group\">\r\n                        <textarea\r\n                            className=\"form-control\"\r\n                            rows=\"5\"\r\n                            value={this.state.description}\r\n                            onChange={this.onDescriptionChange.bind(this)}\r\n                            placeholder=\"What's meaningful about this recipie for you?\"\r\n                        />\r\n                    </div>\r\n                    <br></br>\r\n                    <button\r\n                        className=\"recipe__Button\"\r\n                        type=\"submit\"\r\n                    >Submit\r\n            </button>\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Recipie\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// // import { useForm , Controller } from 'react-hook-form';\r\n// // @material-Ui\r\n// import { FormGroup, FormHelperText, Input, InputLabel, makeStyles } from '@material-ui/core';\r\n// import Button from '@material-ui/core/Button';\r\n// import TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\n// import TextField from '@material-ui/core/TextField';\r\n// // import FormControl from '@material-ui/core/FormControl';\r\n// // import TextField from '@material-ui/core/TextField';\r\n// // import { green } from '@material-ui/core/colors';\r\n\r\n// import axios from 'axios';\r\n\r\n// // import useRecepieStyle from './RStyle';\r\n\r\n// import { useStyles } from './Cooking';\r\n// import '../assets/Recipie.css';\r\n\r\n\r\n// // const useStyles = makeStyles((theme) => ({\r\n// //     button: {\r\n// //         backgroundColor: green['A100'],\r\n// //     },\r\n// // }));\r\n\r\n// function Recipie() {\r\n//     // const { control, errors: fieldsErrors } = useForm();\r\n//     // button color\r\n//     const classes = useStyles();\r\n//     // set state\r\n//     const [firstName, setFirstName] = useState(\"\");\r\n//     const [email, setEmail] = useState(\"\");\r\n//     const [recipie, setRecipie] = useState(\"\");\r\n//     const [meaning, setMeaning] = useState(\"\");\r\n//     const [message, setMessage] = useState({firstName: \"\" }, {email: \"\"}, {recipie: \"\"}, {meaning: \"\"});\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         let newRecipiesData = await fetch(\"http://localhost:3001/cooking/addRecipie\"),{\r\n//           method: \"POST\", \r\n//           headers: {\r\n//             'Content-Type': 'application/json'\r\n//           }}\r\n//         .then((res)=>{\r\n//           if (res.data.status === 'success') {\r\n//             alert(\"Message Sent.\"); \r\n//             // message.resetForm()\r\n//           } else if (res.data.status === 'fail') {\r\n//             alert(\"Message failed to send.\")\r\n//           }\r\n//         })\r\n//         let newRecipie = await newRecipieData.json();\r\n//     }\r\n\r\n\r\n//     const onChangeFirstName = (e) => {\r\n//             setFirstName(e.target.message)\r\n//         }\r\n\r\n//     const onChangeEmail = (e) => {\r\n//         setEmail(e.target.value)\r\n//     }\r\n\r\n//     const onChangeRecipie = (e) => {\r\n//         setRecipie(e.target.value)\r\n//     }\r\n\r\n//     const onChangeMeaning= (e) => {\r\n//         setMeaning(e.target.value)\r\n//     }\r\n\r\n//     // useEffect( () => {\r\n//     //     const handleSubmit = (e) => {\r\n//     //         fetch('/cooking/addRecipie')\r\n//     //         .then(alert('clicked'))\r\n//     //     }\r\n\r\n//     // }, [])\r\n\r\n//     //  const handleSubmit = (e) => {\r\n//     //      alert('clicked');\r\n//         // e.preventDefault();\r\n//         // axios.post(\"http://localhost:3000/cooking/addRecipie\")\r\n//         // .then((res) => {\r\n//         //     if(res.data.status === \"success\") {\r\n//         //         alert('dataReceived way to go!')\r\n//         //         resetForm();\r\n//         //     } else if (res.data.status === \"fail\") {\r\n//         //         alert('fail')\r\n//         //     }\r\n//         // })\r\n\r\n\r\n//     return (\r\n//         <div className=\"recipie\">\r\n//             <div className=\"recipie__form\">\r\n//                 <form className=\"form\" onSubmit={handleSubmit}>\r\n//                     <input \r\n//                         name=\"firstName\"\r\n//                         onChange={onChangeFirstName} \r\n//                         placeholder=\"FirstName\"\r\n//                     /><br/>\r\n//                     <input \r\n//                         name=\"email\"\r\n//                         onChange={onChangeEmail} \r\n//                         placeholder=\"Email\"\r\n//                     /><br/>\r\n//                     <input \r\n//                         name=\"recipie\"\r\n//                         onChange={onChangeRecipie} \r\n//                         placeholder=\"Recipie\"\r\n//                     /><br/>\r\n//                     <textarea\r\n//                         onChange={onChangeMeaning}\r\n//                         placeholder=\"What makes it special to you?\"\r\n//                         row=\"20\"\r\n//                     />\r\n//                     <input type=\"submit\" />\r\n//                 </form>\r\n//           </div>\r\n//         </div>      \r\n//   );\r\n// }\r\n\r\n\r\n\r\n// // Click to Share!</input>\r\n// export default Recipie\r\n\r\n\r\n// my attempt at a good form\r\n                // <form>\r\n                //     <Input \r\n                //         id=\"firstName\" \r\n                //         onChange={onChangeFirstName} \r\n                //         value={message.firstName} \r\n                //         placeholder=\"FirstName\" \r\n                //     />\r\n                //     <Input \r\n                //         id=\"my-email\" \r\n                //         type=\"email\" \r\n                //         onChange={onChangeEmail} \r\n                //         value={message.email} \r\n                //         placeholder='Email' \r\n                //     />\r\n                //     <Input \r\n                //         id=\"my-Recipie\" \r\n                //         onChange={onChangeRecipie} \r\n                //         value={message.recepie} \r\n                //         placeholder=\"Recipie Name\"  \r\n                //         aria-describedby=\"my-helper-text\" \r\n                //     />\r\n                //     <TextareaAutosize \r\n                //         htmlFor=\"my-Meaning\" \r\n                //         onChange={onChangeMeaning} \r\n                //         value={message.meaning} \r\n                //         placeholder=\"Why it's your favorite?\">\r\n                //     </TextareaAutosize>\r\n\r\n                //     <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\r\n\r\n                //     <Button \r\n                //         className={classes.button} \r\n                //         onClick={handleSubmit} \r\n                //         type=\"submit\" \r\n                //         variant=\"outlined\"\r\n                //     >Click to Share!\r\n                //     </Button>\r\n                // </form>",{"ruleId":"57","severity":1,"message":"58","line":6,"column":8,"nodeType":"59","messageId":"60","endLine":6,"endColumn":17},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"57","severity":1,"message":"65","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]